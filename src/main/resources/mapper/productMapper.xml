<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/schema/mybatis-3-mapper.dtd">

<mapper namespace="com.hanssem.app.dao.productMapper">
<!--    상품 등록    -->
    <insert id="insert" parameterType="ProductDto">
        INSERT INTO product
        (product_name, product_price, product_content, product_status, product_class,category_code_number)
        VALUES
        (#{product_name},#{product_price},#{product_content},#{product_status},#{product_class},#{category_code_number})
    </insert>

<!--    전체 상품 개수 구하기    -->
    <select id="count" resultType="int">
        SELECT count(*) FROM product
    </select>

<!--    특정 상품 하나 가져오기    -->
    <select id="select" parameterType="int" resultType="ProductDto">
        SELECT * FROM product WHERE product_number = #{product_number}
    </select>

<!--    상품 전체 가져오기 (정렬: 최근 게시물이 위로)    -->
    <select id="selectAll" resultType="ProductDto">
        SELECT * FROM product ORDER BY product_register_date desc, product_number desc
    </select>

<!--    특정 카테고리에 담긴 상품 전체 가져오기    -->
    <select id="selectCate" resultType="ProductDto">
        SELECT * FROM product WHERE category_code_number = #{category_code_number}
    </select>

<!--    상품 정보 수정    -->
    <update id="update" parameterType="ProductDto">
        UPDATE product
        SET product_name=#{product_name},
            product_price=#{product_price},
            product_content=#{product_content}
        WHERE product_number=#{product_number}
    </update>

<!--    상품 정보 삭제    -->
    <delete id="delete" parameterType="map">
        DELETE FROM product WHERE product_number=#{product_number}
    </delete>

    <resultMap id="ProductDto" type="ProductDto">
        <result column="product_number" property="product_number"/>
        <result column="product_name" property="product_name"/>
        <result column="product_price" property="product_price"/>
        <result column="product_content" property="product_content"/>
    </resultMap>

    <resultMap id="CateSizeDto" type="CateSizeDto">
        <result column="size_code_number" property="size_code_number"/>
    </resultMap>
    <resultMap id="SizeCodeDto" type="SizeCodeDto">
        <result column="size_code_name" property="size_code_name"/>
        <collection property="CateSizeDto" resultMap="CateSizeDto"/>
        <collection property="ProductDto" resultMap="ProductDto"/>
    </resultMap>

<!--    상품의 사이즈 정보 가져오기-->
    <select id="selectSize" parameterType="int" resultType="SizeCodeDto">
        SELECT product_number,
        product_name,
        product_price,
        product_content,
        cs.size_code_number,
        size_code_name
        FROM product p
        JOIN category_size cs on p.category_code_number = cs.category_code_number
        JOIN size_code sc on cs.size_code_number = sc.size_code_number
        WHERE product_number =#{product_number}
    </select>

</mapper>